A validation rule enforces data integrity by ensuring that data entered into Salesforce meets specified criteria before it is saved. 
If a record violates the validation rule, Salesforce prevents the record from being saved and displays an error message.

Components of a Validation Rule:
    Error Condition Formula: A logical formula that defines the condition to validate (e.g., Length__c <= 0).
    Error Message: A custom message shown to users when the validation fails.
    Active Status: Determines whether the rule is currently enforced.
Example: A validation rule on the Fabrication object might enforce that the length of a material must be greater than 0:
        Error Condition Formula: Length__c <= 0
        Error Message: "Length must be greater than 0."


To create a Validation Rule programmatically for the Fabrication object using Apex, we need to use the Metadata API.
Validation rules ensure that data entered in Salesforce meets specific criteria before saving records.
Below is the process to define and deploy a validation rule using Apex.

Apex Code for Creating a Validation Rule:

public class CreateValidationRule {

    public static void createValidationRule() {
        MetadataService.MetadataPort service = new MetadataService.MetadataPort();
        service.SessionHeader = new MetadataService.SessionHeader_element();
        service.SessionHeader.sessionId = UserInfo.getSessionId();

        // Define the validation rule
        MetadataService.ValidationRule validationRule = new MetadataService.ValidationRule();
        validationRule.fullName = 'Fabrication__c.Length_Must_Be_Positive'; // API name of the rule
        validationRule.active = true; // Activate the rule
        validationRule.errorConditionFormula = 'Length__c <= 0'; // Validation formula
        validationRule.errorMessage = 'Length must be greater than 0'; // Error message to display

        try {
            // Create the validation rule
            List<MetadataService.SaveResult> results = service.createMetadata(
                new MetadataService.Metadata[] { validationRule }
            );

            // Handle the results
            for (MetadataService.SaveResult result : results) {
                if (result.success) {
                    System.debug('Validation Rule created successfully: ' + result.fullName);
                } else {
                    System.debug('Error creating Validation Rule: ' + result.errors[0].message);
                }
            }
        } catch (Exception e) {
            System.debug('Exception: ' + e.getMessage());
        }
    }
}


Key Components of the Code:

    MetadataService.ValidationRule:
        fullName: API name of the validation rule, including the object.
        active: Indicates whether the rule is active.
        errorConditionFormula: The formula that defines the validation logic. Example: Length__c <= 0.
        errorMessage: The message displayed to users when the validation rule fails.
    Metadata API:
        Uses the createMetadata method to add the validation rule to the object.
    Error Handling:
        Logs errors to ensure you can troubleshoot issues during creation.


Deploy and Execute:

    Deploy the CreateValidationRule class to your org.
    Execute the createValidationRule method from the Developer Console using:
          CreateValidationRule.createValidationRule();


